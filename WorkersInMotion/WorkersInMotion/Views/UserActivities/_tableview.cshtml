@model WorkersInMotion.Model.ViewModel.JobStatusViewModel

<div class="portlet-body">
    <div class="table-toolbar">
        @*<div class="btn-group">
                <a href="@Url.Action("Create", "Job")" class="btn green">
                    Add New Job <i class='icon-plus'></i>
                </a>
            </div>*@
    </div>
    <table class="table table-striped table-hover table-bordered dataTable" id="sample_1" aria-describedby="sample_1_info" style="overflow-y:scroll">
        <thead>
            <tr role="row">
                @*<th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                        : activate to sort column ascending">
                    </th>*@
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                       Visit Type
                                    : activate to sort column ascending">
                    Visit Type
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                       Customer Name
                                    : activate to sort column ascending">
                    Client Name
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                      Store ID
                                    : activate to sort column ascending">
                    Store ID
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                       PO#
                                    : activate to sort column ascending">
                    PO Number
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                       Status
                                    : activate to sort column ascending">
                    Status
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                 Check-In
                                    : activate to sort column ascending">
                    Check-In
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                 Check-Out
                                    : activate to sort column ascending">
                    Check-Out
                </th>
                <th class="sorting" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                   Field Manager
                                    : activate to sort column ascending">
                    Field Manager
                </th>
                <th class="sorting-disabled" role="columnheader" tabindex="0" aria-controls="sample_1" rowspan="1" colspan="1" aria-label="
                                             Actions
                                        : activate to sort column ascending">
                    Actions
                </th>

            </tr>
        </thead>

        <tbody role="alert" aria-live="polite" aria-relevant="all">
            @if (Model != null && Model.JobStatusModel != null && Model.JobStatusModel.Count() > 0)
            {
                foreach (var item in Model.JobStatusModel)
                {
                    <tr class="odd gradeX">
                        @*<td style="text-align: center;">
                                @if (item.locationmismatch == true)
                                {
                                    <span style="color:red;font-weight:bold">!</span>
                                }
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.JobName)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerName)
                            <div id="tblextend" style="display:none;">
                                @Html.Label("Site Address : ", new { @style = "font-size:12px" })
                                @Html.DisplayFor(modelItem => item.SiteAddress, new { @style = "font-size:12px" })
                                <br />
                                @Html.Label("Estimated Duration : ", new { @style = "font-size:12px" })
                                @Html.DisplayFor(modelItem => item.EstimatedDuration, new { @style = "font-size:12px" })
                                <br />
                                @if (item.statuscode >= 2 && !string.IsNullOrEmpty(item.AssignedTo))
                                {
                                    @Html.Label("Associate Name : ", new { @style = "font-size:12px" })
                                    @Html.DisplayFor(modelItem => item.AssociateName, new { @style = "font-size:12px" })
                                    <br />
                                    @Html.Label("Associate Contact Number : ", new { @style = "font-size:12px" })
                                    @Html.DisplayFor(modelItem => item.AssociateContactNumber, new { @style = "font-size:12px" })
                                    <br />
                                    @Html.Label("Email : ", new { @style = "font-size:12px" })
                                    @Html.DisplayFor(modelItem => item.Email, new { @style = "font-size:12px" })
                                }
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StoreID)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.PONumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualStartTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualEndTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FieldManager)
                        </td>
                        <td>
                            @if (item.statuscode != 1)
                            {
                                @Html.ActionLink("Details", "JobForm", new { id = item.JobIndexGUID }, new { @class = "label label-sm label-default", @style = "border-radius:0px;" })
                                @*@Html.ActionLink("Details", "Index", "JobDetails", new { jobindexguid = item.JobIndexGUID }, new { @class = "label label-sm label-default", @style = "border-radius:0px;" })*@

                                @*@Html.ActionLink("Delete", "Delete", new { id = item.JobIndexGUID }, new { @class = "label label-sm label-warning", @style = "border-radius:0px;", @onclick = "return deleteconfirm();" })*@
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="11" align="center" style=" color:red">
                        No Data Found
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>