@model WorkersInMotion.Model.ViewModel.AssignJobModel

@{
    // Layout = null;
}
@using PagedList.Mvc;
<!DOCTYPE html>
<html>
<head>
    <script src="~/jqueryplugin-dyndatetime-0.2-src/jquery.dynDateTime.js"></script>
    <script src="~/jqueryplugin-dyndatetime-0.2-src/lang/calendar-en.min.js"></script>
    <link href="~/jqueryplugin-dyndatetime-0.2-src/css/calendar-blue.css" rel="stylesheet" />

    <title>Index</title>
    <style type="text/css">
        /*.leftbar-heading {
            font-family: Arial,Verdana, Helvetica, sans-serif;
            font-size: 13px;
            font-style: normal;
            line-height: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
        }*/
    </style>
</head>
<body>
    <!-- BEGIN PAGE HEADER-->
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN PAGE TITLE & BREADCRUMB-->
            <h3 class="page-title">
                Assign Jobs
            </h3>
            <ul class="page-breadcrumb breadcrumb">
                <li>
                    <i class="icon-home"></i>
                    <a href="@Url.Action("DashBoard","User")">Home</a>
                    <i class="icon-angle-right"></i>
                </li>
                <li><a href="#">Assign Jobs</a></li>
            </ul>
            <!-- END PAGE TITLE & BREADCRUMB-->
        </div>
    </div>
    <!-- END PAGE HEADER-->
    <!-- BEGIN DASHBOARD STATS -->
    <div class="row">
    </div>
    <!-- END DASHBOARD STATS -->


    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <!-- BEGIN PORTLET-->
            <div class="portlet box grey">
                <div class="portlet-title">
                    <div class="caption"><i class="icon-cog"></i>Use the controls below to assign jobs to users.</div>
                    @if (Session["UserType"] != null && (Session["UserType"].ToString() == "ENT_U_RM" || Session["UserType"].ToString() == "ENT_U_TM"))
                    {
                        <table align="right">
                            <tr>
                                @if (Session["UserType"].ToString() == "ENT_U_RM")
                                {
                                    <td>
                                        @Html.Raw(@ViewBag.ZoneList)
                                    </td>
                                }
                                <td>
                                    @Html.Raw(@ViewBag.GroupList)
                                </td>
                            </tr>
                        </table>
                    }
                </div>
                <div class="portlet-body">
                    <table class="table table-striped table-bordered table-hover ">
                        <tr>
                            <th>
                                Job Name
                            </th>
                            <th>
                                Preferred Start Time
                            <th>
                                Preferred End Time
                            </th>
                            <th></th>
                        </tr>
                        @if (Model.JobModelList.Count() > 0)
                        {
                            foreach (var item in Model.JobModelList.AsEnumerable())
                            {
                                <tr class="odd gradeX">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.JobName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PreferredStartTime)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PreferredEndTime)
                                    </td>
                                    <td>
                                        @Html.ActionLink("User List", "Index", new { regionguid = item.RegionCode.ToString(), territoryguid = item.TerritoryCode.ToString(), jobindexguid = item.JobIndexGUID.ToString() }, new { @class = "label label-sm label-info", @style = "border-radius:0px;" })
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" align="center" style="color:red">
                                    No Data Found
                                </td>
                            </tr>
                        }
                    </table>
                </div>
                <div class="clearfix"></div>

            </div>
            <!-- END PAGE -->
        </div>
    </div>
    @if (Model.GlobalUsers != null && Model.JobModel != null)
    {
        <div class="row" style="width:50%">
            <div class="col-md-12 col-sm-12">
                <!-- BEGIN PORTLET-->
                <div class="portlet box grey">
                    <div class="portlet-title">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.Label("Job Name :", new { @style = "font-size:12px" })
                                @Html.DisplayFor(model => model.JobModel.JobName, new { @style = "font-size:12px" })
                                @Html.HiddenFor(model => model.JobModel.JobIndexGUID)
                            </div>
                        </div>
                        <div>
                            <br />
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.Label("Estimated Start Time : ", new { @style = "font-size:12px" })
                                @Html.TextBox("EstimatedStartTime", null, new { @readonly = "readonly", @style = "cursor:pointer", @onchange = "return datevalidate();" })
                            </div>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <table class="table table-striped table-bordered table-hover ">
                            <tr>
                                <th>
                                </th>
                                <th>
                                    User Name
                                </th>
                            </tr>
                            @if (Model.JobModelList.Count() > 0)
                            {
                                foreach (var item in Model.GlobalUsers.AsEnumerable())
                                {
                                    <tr class="odd gradeX">
                                        <td>
                                            @Html.RadioButton("rdoUser", item.UserGUID, new { @id = "rdo_btn_" + item.UserGUID })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserName)
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" align="center" style="color:red">
                                        No Data Found
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                    <div class="clearfix"></div>

                </div>
                <!-- END PAGE -->
            </div>
        </div>
    }

    <script type="text/javascript">
        $(document).ready(function () {
            $("#EstimatedStartTime").dynDateTime({
                showsTime: true,
                ifFormat: "%Y/%m/%d %H:%M",
                daFormat: "%l;%M %p, %e %m, %Y",
                align: null,
                electric: true,
                singleClick: false,
                displayArea: ".siblings('.dtcDisplayArea')",
                button: ".next()",
                timeFormat: "12"
            });

            if ($("#EstimatedStartTime").val() == "") {
                document.getElementById("EstimatedStartTime").value = '@System.DateTime.UtcNow.ToString("yyyy/MM/dd HH:mm")';
            }

            $('#EstimatedStartTime').keydown(function (event) {
                var key = event.keyCode || event.charCode;
                if (key == 8 || key == 46)
                    return false;
            });

            $("input[name = rdoUser]").on("change", function () {
                //  alert($(this).val());
                var val = $(this).val();
                window.location = "/AssignJob/Assign/" + val + "?jobindexguid=" + $('#JobModel_JobIndexGUID').val() + "";
            });
        });


        function datevalidate() {
            if ($("#EstimatedStartTime").val() < '@System.DateTime.UtcNow.ToString("yyyy/MM/dd HH:mm")') {
                document.getElementById("EstimatedStartTime").value = '@System.DateTime.UtcNow.ToString("yyyy/MM/dd HH:mm")';
                ModalPopupsAlert('Workers-In-Motion', 'Start time should be greater or equal to current time.');
                return false;
            }
            else {
                return true;
            }

        }

        function UserListClick() {

        }

    </script>
</body>
</html>
